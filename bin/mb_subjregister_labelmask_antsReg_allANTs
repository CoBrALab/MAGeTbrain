#!/bin/bash
#
# This is the default registration script for MAGeT brain.
#
# Currently, it operates on MINC files only.
#
# Registers <atlas> to <target> and outputs the resulting xfm to output.xfm
# Intermediate XFMs and other files to go `dirname output.xfm`
#
# if atlas is in grand/parent/atlas.mnc, then grand/mask/atlas-mask.mnc is
# checked for existence.  If so, it's used as a mask during non-linear
# registration.
#
# usage:
#      register <atlas.mnc> <target.mnc> <output.xfm>
#
set -euo pipefail
set -x

export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=${THREADS_PER_COMMAND:-$(nproc)}

calc(){ awk "BEGIN { print "$*" }"; }

tmpdir=$(mktemp -d)

atlas=$1
target=$2
output_xfm=$3

atlas_stem=$(basename ${atlas} .mnc)
target_stem=$(basename ${target} .mnc)
atlas_labels=$(dirname $(dirname ${atlas}))/labels/${atlas_stem}_labels.mnc
output_dir=$(dirname ${output_xfm})
AT_lin_xfm=${output_dir}/ATlin.xfm
TA_lin_xfm=${output_dir}/ATlin_inverse.xfm
TA_nl_xfm=${output_dir}/TAnl
AT_nl_xfm=${output_dir}/TAnl1_inverse_NL.xfm
atlas_label_mask=${output_dir}/labelmask.mnc
atlas_label_mask_close=${output_dir}/labelmask_fine.mnc
atlas_res_label_mask=${output_dir}/labelmasklinres.mnc

fixed_minimum_resolution=$(python -c "print(min([abs(x) for x in [float(x) for x in \"$(PrintHeader ${target} 1)\".split(\"x\")]]))")
fixed_maximum_resolution=$(python -c "print(max([ a*b for a,b in zip([abs(x) for x in [float(x) for x in \"$(PrintHeader ${target} 1)\".split(\"x\")]],[abs(x) for x in [float(x) for x in \"$(PrintHeader ${target} 2)\".split(\"x\")]])]))")

if [[ -s $atlas_labels ]]; then
  if [[ ! -s ${atlas_label_mask} ]]; then
    #Construct a mask from the label file input
    #Dilate the mask
    moving_minimum_resolution=$(python -c "print(min([abs(x) for x in [float(x) for x in \"$(PrintHeader ${atlas_labels} 1)\".split(\"x\")]]))")
    mincmorph -3D26 -clobber -successive B[0.5:inf:1:0]$(seq $(calc "int(3/${moving_minimum_resolution}+0.5)") | awk -vORS= '{print "D"}')  ${atlas_labels} ${atlas_label_mask}
    mincmorph -3D26 -clobber -successive B[0.5:inf:1:0]$(seq $(calc "int(1.5/${moving_minimum_resolution}+0.5)") | awk -vORS= '{print "D"}') ${atlas_labels} ${atlas_label_mask_close}
  fi
  fixedmask=NOMASK
  movingmask=${atlas_label_mask}
  fixedmaskfine=NOMASK
  movingmaskfine=${atlas_label_mask_close}
elif [[ -d $(dirname $(dirname $(dirname $(dirname ${atlas}))))/templatemasks/$atlas_stem ]]; then
  if [[ ! -s ${atlas_label_mask}  ]]; then
    mincmath -byte -unsigned -clobber -labels -or \
      $(dirname $(dirname $(dirname $(dirname ${atlas}))))/templatemasks/${atlas_stem}/*mnc ${atlas_label_mask}
  fi
  fixedmask=NOMASK
  fixedmaskfine=NOMASK
  movingmask=${atlas_label_mask}
  movingmaskfine=${atlas_label_mask_close}
else
  fixedmask=NOMASK
  fixedmaskfine=NOMASK
  movingmask=NOMASK
  movingmaskfine=NOMASK
fi

# LINEAR
if [[ ! -s ${AT_lin_xfm} && ! -s ${TA_lin_xfm} ]]; then
  fixedfile=${target}
  movingfile=${atlas}
  affinesteps=$(mb_ants_generate_iterations.py --min ${fixed_minimum_resolution} --max ${fixed_maximum_resolution} --output multilevel-halving --convergence 1e-7)
  antsRegistration --dimensionality 3 --verbose --minc \
    --output [ ${tmpdir}/reg ] \
    --use-histogram-matching 0 \
    --initial-moving-transform [ ${target},${atlas},1 ] \
    $(eval echo ${affinesteps})
  mv -f ${tmpdir}/reg0_GenericAffine.xfm ${TA_lin_xfm}
  xfminvert -clobber ${TA_lin_xfm} ${AT_lin_xfm}
fi

if [[ -s ${atlas_label_mask} && ! -s ${atlas_res_label_mask} ]]; then
  mincresample -clobber -unsigned -byte -keep -near -like ${target} -transform ${AT_lin_xfm} ${atlas_label_mask} ${atlas_res_label_mask}
  if [[ -s ${atlas_labels} ]]; then
    mkdir -p $(dirname $(dirname $(dirname $(dirname ${output_dir}))))/templatemasks/${target_stem}
    cp ${atlas_res_label_mask} $(dirname $(dirname $(dirname $(dirname ${output_dir}))))/templatemasks/${target_stem}/${atlas_stem}.mnc
  fi
fi

# NONLINEAR
if [[ ! -s ${TA_nl_xfm}1_NL.xfm ]]; then
  nonlinearsteps=$(mb_ants_generate_iterations.py --min ${fixed_minimum_resolution} --max ${fixed_maximum_resolution})
  antsRegistration -d 3 --collapse-output-transforms 1 --verbose --minc \
    --initial-moving-transform ${TA_lin_xfm} \
    --transform SyN[0.25] --metric CC[${target},${atlas},1,4] \
    --use-histogram-matching 0 \
    --output ${TA_nl_xfm} \
    $(eval echo ${nonlinearsteps}) \
    --masks [NOMASK,${movingmask}]
fi

if [[ ! -s ${output_xfm} ]]; then
  xfmconcat -clobber ${AT_lin_xfm} ${AT_nl_xfm} ${output_xfm}
fi

if [[ -s ${output_xfm} ]]; then
  rm ${AT_lin_xfm}
  rm ${TA_lin_xfm}
  rm ${TA_nl_xfm}1_NL.xfm
  rm ${AT_nl_xfm}
fi

rm -rf ${tmpdir}
